pragma solidity ^0.4.23;

/*
contract developed by vatsamail@gmail.com
Refer zastrin.com
Mahesh Murthy
*/

/* requirements:
 npm install -g --production windows-build-tools
 npm install ganache-cli web3@0.20.1 solc

 code compile at: http://remix.ethereum.org
*/
contract Voting {
  bytes32[] public candidateList;

  // total tokens
  uint public totalTokens;

  // eth per token
  uint public tokenPrice;

  // balance of tokens
  uint public balanceTokens;



  // weshould be able to do this for each voter
  struct voter {
    // tracking: voter address
    address voterAddress;

    // tracking: tokens purchased
    uint tokensBought;

    // tracking: voting per candidate
    uint[] tokensUsedPerCandidate; // example [10, 20, 15] means first candidate has 10, second has 20 ...
  }

  // a hash look up of tracking info per voter through their address (address starts with 0x ...)
  mapping (address => voter) public voterInfo;

 // ----------------------------------------------------

  // hash of candidates and their votes
  mapping(bytes32 => uint) public votesReceived;

  // constructor
  constructor(uint _totalTokens, uint _tokenPrice, bytes32[] _candidateNames) public {
    totalTokens = _totalTokens;
    balanceTokens = _totalTokens;
    tokenPrice = _tokenPrice;
    candidateList = _candidateNames;
  }

  // ------------------- logic begins -------------
  // user should be able to purchase tokens
  function buy() payable public {
    // payable keyword is a must .. so it tracks from caller account to the contract account to transfer ether

    // msg is a global variable msg.value is always in wei .. the lowest denominator of ether
    uint tokensToBuy = msg.value / tokenPrice;
    require(tokensToBuy <= balanceTokens); // asserting check.

    voterInfo[msg.sender].voterAddress = msg.sender; // msg.sender contains the address of the sender
    voterInfo[msg.sender].tokensBought += tokensToBuy;
    balanceTokens -= tokensToBuy;
  }

  // should be able to vote for candidates using tokens
  function voteForCandidate(bytes32 candidate, uint tokens) public {
    // check if the user/voter has enough token to vote
    uint availableTokens = voterInfo[msg.sender].tokensBought - totalTokensUsed(voterInfo[msg.sender].tokensUsedPerCandidate);
    require(tokens < availableTokens, "you do not have enough tokens!");

    // increment candidates vote count
    votesReceived[candidate] += tokens;

    // initialize the array
    if (voterInfo[msg.sender].tokensUsedPerCandidate.length == 0) {
      for(uint i=0; i<candidateList.length; i++) {
        voterInfo[msg.sender].tokensUsedPerCandidate.push(0);
      }
    }
    // update voter struct for tokensUsedPerCandidate for this voter
    uint index = indexOfCandidate(candidate);
    voterInfo[msg.sender].tokensUsedPerCandidate[index] += tokens;
  }

  // internal function to get the index of the candidate
  function indexOfCandidate(bytes32 name) view private returns(uint) {
    for(uint i=0; i < candidateList.length; i++) {
      if (candidateList[i] == name) {
        return i;
      }
    }
    return uint(-1);
  }

  // calculating the totalTokens - internal function
  function totalTokensUsed(uint[] _tokensUsedPerCandidate) private pure returns(uint) {
    // pure says that it is not even touching anything related to contract
    // view says that it is read only function (which is not used in the function but FYI)

    uint totalUsedTokens = 0;
    for(uint i=0; i<_tokensUsedPerCandidate.length; i++) {
      totalUsedTokens += _tokensUsedPerCandidate[i];
    }
    return totalUsedTokens;
  }

  // should be able to see voting results a.k.a. lookup

  function voterDetails(address user)view public returns(uint, uint[]) {
    return (voterInfo[user].tokensBought, voterInfo[user].tokensUsedPerCandidate);
  }

  function tokensSold()public view returns(uint) {
    return totalTokens - balanceTokens;
  }

  function allCandidates()view public returns(bytes32[]) {
    return candidateList;
  }
}


/*
// ABI:
[
	{
		"constant": true,
		"inputs": [],
		"name": "tokensSold",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "user",
				"type": "address"
			}
		],
		"name": "voterDetails",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			},
			{
				"name": "",
				"type": "uint256[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "candidate",
				"type": "bytes32"
			},
			{
				"name": "tokens",
				"type": "uint256"
			}
		],
		"name": "voteForCandidate",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "bytes32"
			}
		],
		"name": "votesReceived",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "totalTokens",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "tokenPrice",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "allCandidates",
		"outputs": [
			{
				"name": "",
				"type": "bytes32[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "buy",
		"outputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"name": "candidateList",
		"outputs": [
			{
				"name": "",
				"type": "bytes32"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"name": "voterInfo",
		"outputs": [
			{
				"name": "voterAddress",
				"type": "address"
			},
			{
				"name": "tokensBought",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "balanceTokens",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"name": "_totalTokens",
				"type": "uint256"
			},
			{
				"name": "_tokenPrice",
				"type": "uint256"
			},
			{
				"name": "_candidateNames",
				"type": "bytes32[]"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "constructor"
	}
]
*/

/*
// Bytecode:
{
	"linkReferences": {},
	"object": "608060405234801561001057600080fd5b506040516107a93803806107a983398101604090815281516020808401519284015160018390556003839055600284905590930180519193909161005a9160009190840190610063565b505050506100cd565b8280548282559060005260206000209081019282156100a0579160200282015b828111156100a05782518255602090920191600190910190610083565b506100ac9291506100b0565b5090565b6100ca91905b808211156100ac57600081556001016100b6565b90565b6106cd806100dc6000396000f3006080604052600436106100ae5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663518ab2a881146100b35780635938750d146100da5780636b2dc6b5146101565780637021939f146101735780637e1c0c091461018b5780637ff9b596146101a057806381c40715146101b5578063a6f2ae3a1461021a578063b13c744b14610222578063cdf58d351461023a578063e4494a0f1461027e575b600080fd5b3480156100bf57600080fd5b506100c8610293565b60408051918252519081900360200190f35b3480156100e657600080fd5b506100fb600160a060020a036004351661029d565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610141578181015183820152602001610129565b50505050905001935050505060405180910390f35b34801561016257600080fd5b5061017160043560243561031c565b005b34801561017f57600080fd5b506100c86004356104eb565b34801561019757600080fd5b506100c86104fd565b3480156101ac57600080fd5b506100c8610503565b3480156101c157600080fd5b506101ca610509565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102065781810151838201526020016101ee565b505050509050019250505060405180910390f35b610171610562565b34801561022e57600080fd5b506100c86004356105d0565b34801561024657600080fd5b5061025b600160a060020a03600435166105ef565b60408051600160a060020a03909316835260208301919091528051918290030190f35b34801561028a57600080fd5b506100c8610614565b6003546001540390565b600160a060020a03811660009081526004602090815260408083206001810154600290910180548351818602810186019094528084526060949293919283919083018282801561030c57602002820191906000526020600020905b8154815260200190600101908083116102f8575b5050505050905091509150915091565b600160a060020a0333166000908152600460209081526040808320600201805482518185028101850190935280835284938493610390939092909183018282801561038657602002820191906000526020600020905b815481526020019060010190808311610372575b505050505061061a565b600160a060020a03331660009081526004602052604090206001015403925082841061041d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f796f7520646f206e6f74206861766520656e6f75676820746f6b656e73210000604482015290519081900360640190fd5b6000858152600560209081526040808320805488019055600160a060020a03331683526004909152902060020154151561049d57600091505b60005482101561049d57600160a060020a03331660009081526004602090815260408220600201805460018181018355918452918320909101919091559190910190610456565b6104a685610654565b600160a060020a033316600090815260046020526040902060020180549192508591839081106104d257fe5b6000918252602090912001805490910190555050505050565b60056020526000908152604090205481565b60015481565b60025481565b6060600080548060200260200160405190810160405280929190818152602001828054801561055857602002820191906000526020600020905b81548152600190910190602001808311610543575b5050505050905090565b60006002543481151561057157fe5b049050600354811115151561058557600080fd5b600160a060020a0333166000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff1916909117815560010180548201905560038054919091039055565b60008054829081106105de57fe5b600091825260209091200154905081565b60046020526000908152604090208054600190910154600160a060020a039091169082565b60035481565b600080805b835181101561064d57838181518110151561063657fe5b60209081029091010151919091019060010161061f565b5092915050565b6000805b60005481101561069557600080548491908390811061067357fe5b600091825260209091200154141561068d5780915061069b565b600101610658565b60001991505b509190505600a165627a7a723058203b28f6a2085398429ec47dd150b19301ae04b0a2f42528888c8069761a4f255d0029",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7A9 CODESIZE SUB DUP1 PUSH2 0x7A9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH1 0x2 DUP5 SWAP1 SSTORE SWAP1 SWAP4 ADD DUP1 MLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH2 0x5A SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x63 JUMP JUMPDEST POP POP POP POP PUSH2 0xCD JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA0 JUMPI DUP3 MLOAD DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x83 JUMP JUMPDEST POP PUSH2 0xAC SWAP3 SWAP2 POP PUSH2 0xB0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xCA SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6CD DUP1 PUSH2 0xDC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAE JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x518AB2A8 DUP2 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x5938750D EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x6B2DC6B5 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x7021939F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x7E1C0C09 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x81C40715 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xB13C744B EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCDF58D35 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE4494A0F EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x141 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 CALLDATALOAD PUSH2 0x4EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x4FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x503 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x562 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 CALLDATALOAD PUSH2 0x5D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2F8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP4 PUSH2 0x390 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x372 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x61A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SUB SWAP3 POP DUP3 DUP5 LT PUSH2 0x41D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520646F206E6F74206861766520656E6F75676820746F6B656E73210000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP5 MSTORE SWAP2 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x4A6 DUP6 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x4D2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD CALLVALUE DUP2 ISZERO ISZERO PUSH2 0x571 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x5DE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x64D JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x636 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x61F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x673 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x68D JUMPI DUP1 SWAP2 POP PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 EXTCODESIZE 0x28 0xf6 LOG2 ADDMOD MSTORE8 SWAP9 TIMESTAMP SWAP15 0xc4 PUSH30 0xD150B19301AE04B0A2F42528888C8069761A4F255D002900000000000000 ",
	"sourceMap": "277:3861:0:-;;;1156:226;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:11;:26;;;1279:13;:28;;;1314:10;:24;;;1156:226;;;1345:31;;1156:226;;;;1345:31;;-1:-1:-1;;1345:31:0;;;;;:::i;:::-;;1156:226;;;277:3861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;277:3861:0;;;-1:-1:-1;277:3861:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
}
*/
