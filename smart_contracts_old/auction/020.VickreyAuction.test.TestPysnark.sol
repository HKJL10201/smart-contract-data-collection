pragma solidity ^0.4.2;

import "truffle/Assert.sol";
import "../contracts/Pysnark.sol";

contract TestPysnark {
    function testVerifies() public {
        Pysnark ps = new Pysnark(); 
        uint[] memory io = new uint[](12);
        io[0] = 113352272022910454849766808022193839381730505232466985843870892526311313826708; // main/o_C0
        io[1] = 98443654170708341847053927044574628133951677650357157056892039171079775813349; // main/o_C1
        io[2] = 37384574923952192695438209863649534285761668336816005942503064764274437026875; // main/o_C2
        io[3] = 79651652976891245462862707977252210012993763287499590273812762053918209031015; // main/o_C3
        io[4] = 98672607540224579437784219265197009564811860573231826238577779660591856537019; // main/o_C4
        io[5] = 49746623945155972906218572533216992726452178030652152683452162219573964909521; // main/o_C5
        io[6] = 20319713983746948787341258514742120287965879769792814358846511851448582132431; // main/o_C6
        io[7] = 34751068011821404893319794770064963169498404195119498858611188725955055981708; // main/o_C7
        io[8] = 45162839217589339123398948875309478858098654899165936145282438155831842493469; // main/o_C8
        io[9] = 63117300110637952414352382464189577155004835779094266324357396464830045667877; // main/o_C9
        io[10] = 34751068011821404893319794770064963169498404195119498858611188725955055981708; // main/o_HighestCommit
        io[11] = 1; // main/o_Valid
        uint[] memory proof = new uint[](22);
        proof[0] = 10240560760546365772623464083436319634768781622131648967806723803818677077182;
        proof[1] = 10799774758127299062244805616046328081378164895803492915109213426039233270610;
        proof[2] = 2174310631392140693413062720683299029858351963787583636838754864175208220554;
        proof[3] = 12473853386392145491771188073446150874178085066262346590220209761537569566668;
        proof[4] = 21793321618018619314985261635804071535391848491108136201094527882833570536462;
        proof[5] = 19587832739452545959333877045441769393997751553096102286047443712869674680420;
        proof[6] = 14766107094008022823128276451948644058199197765389859704482850185150900892980;
        proof[7] = 12230028339024566653716441960913941259541876165866774663890617696489933606374;
        proof[8] = 20957965744375001443393360308213513038914999147085209564647068817358049721036;
        proof[9] = 14329973420152810752284765028465255368930031172942251677614588126109570832133;
        proof[10] = 3386920597518962428142811285526126877532188986802009329275652211286409999344;
        proof[11] = 5133999034540229395273664370163574893648101299784806096347359979383801962732;
        proof[12] = 6627836780851870746590654913076993300144562395446046023644694387539470110490;
        proof[13] = 12464927692979685682297965618853481762030538433001729939015869191659927063235;
        proof[14] = 164719350236195817591933665923521177074299073055732198512185419502638828893;
        proof[15] = 16734363920961382859166243001817130745576895926341109317169147082029121886288;
        proof[16] = 5635115472026536493796461822119467285383792162856523697354490401649683620491;
        proof[17] = 6015798133934645488253652593159935530724695366350917410628408771937913364439;
        proof[18] = 1940503232153652122768860441014281714934562799001445611983591405822923450761;
        proof[19] = 5923141595277973234749896027216077599111260798993573991051729724857362875081;
        proof[20] = 4928645518270365134495597672461594429156391342395445681496268801290689865410;
        proof[21] = 15324175615134665733849341803249624602909326144618975903039278974427049613126;
        Assert.equal(ps.verify(proof, io), true, "Proof should verify");
    }
}

